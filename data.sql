CREATE TABLE IF NOT EXISTS sp_flow (
  id VARCHAR(32) NOT NULL,
  name VARCHAR(64) DEFAULT NULL COMMENT '任务名字',
  xml LONGTEXT DEFAULT NULL COMMENT 'xml表达式',
  cron VARCHAR(255) DEFAULT NULL COMMENT 'corn表达式',
  enabled CHAR(1) DEFAULT '0' COMMENT '任务是否启动,默认未启动',
  create_date DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  last_execute_time DATETIME DEFAULT NULL COMMENT '上一次执行时间',
  next_execute_time DATETIME DEFAULT NULL COMMENT '下一次执行时间',
  execute_count INT(8) DEFAULT NULL COMMENT '定时执行的已执行次数',
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS sp_datasource (
  id VARCHAR(32) NOT NULL,
  name VARCHAR(255) DEFAULT NULL,
  driver_class_name VARCHAR(255) DEFAULT NULL,
  jdbc_url VARCHAR(255) DEFAULT NULL,
  username VARCHAR(64) DEFAULT NULL,
  password VARCHAR(32) DEFAULT NULL,
  create_date DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS sp_variable (
  id INT(11) NOT NULL AUTO_INCREMENT,
  name VARCHAR(32) DEFAULT NULL COMMENT '变量名',
  value VARCHAR(512) DEFAULT NULL COMMENT '变量值',
  description VARCHAR(255) DEFAULT NULL COMMENT '变量描述',
  create_date DATETIME DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS sp_task (
  id INT(11) NOT NULL AUTO_INCREMENT,
  flow_id VARCHAR(32) NOT NULL,
  begin_time DATETIME DEFAULT NULL,
  end_time DATETIME DEFAULT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS sp_function (
  id VARCHAR(32) NOT NULL,
  name VARCHAR(255) DEFAULT NULL COMMENT '函数名',
  parameter VARCHAR(512) DEFAULT NULL COMMENT '参数',
  script TEXT DEFAULT NULL COMMENT 'js脚本',
  create_date DATETIME DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS sp_flow_notice (
  id VARCHAR(32) NOT NULL,
  recipients VARCHAR(200) DEFAULT NULL COMMENT '收件人',
  notice_way CHAR(10) DEFAULT NULL COMMENT '通知方式',
  start_notice CHAR(1) DEFAULT '0' COMMENT '流程开始通知:1:开启通知,0:关闭通知',
  exception_notice CHAR(1) DEFAULT '0' COMMENT '流程异常通知:1:开启通知,0:关闭通知',
  end_notice CHAR(1) DEFAULT '0' COMMENT '流程结束通知:1:开启通知,0:关闭通知',
  PRIMARY KEY (id)
);